#!/usr/bin/python
# -*- mode: python -*-

# Copyright 2015 Cisco Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


from ucsmsdk.mometa.lsboot.LsbootPolicy import LsbootPolicy
from ucsmsdk.mometa.lsboot.LsbootBootSecurity import LsbootBootSecurity
from ucsmsdk.mometa.lsboot.LsbootLan import LsbootLan
from ucsmsdk.mometa.lsboot.LsbootLanImagePath import LsbootLanImagePath
from ucsmsdk.mometa.lsboot.LsbootSan import LsbootSan
from ucsmsdk.ucshandle import UcsHandle

def conf_mo_test(module):
    name = module.params.get('LsbootPolicy')
    boot = module.params.get('LsbootBootSecurity')
    bootLan = module.params.get('LsbootLan')
    LsbootSan = module.params.get('LsbootSan')	

    results = {}
    for key in name:
    	if(key == "descr"):
		a = name[key]

    try:
	mo =  LsbootPolicy(parent_mo_or_dn="org-root",name="name",descr=name['descr'])

    except:
        module.fail_json(msg="Boot Policy creation failed")

    if boot:	    
	try:
		mo_1 = LsbootBootSecurity(parent_mo_or_dn=mo, secure_boot=boot['secure_boot'])
    	except:
        	module.fail_json(msg="Boot Security creation failed")

    if bootLan:	    
	try:
		mo_2 = LsbootLan(parent_mo_or_dn=mo, prot="pxe", order="5")
		mo_2_1 = LsbootLanImagePath(parent_mo_or_dn=mo_2, prov_srv_policy_name="", img_sec_policy_name="", vnic_name="", i_scsi_vnic_name="", boot_ip_policy_name="", img_policy_name="", type="primary")
    	except:
        	module.fail_json(msg="Boot Security creation failed")

    if LsbootSan:	    
	try:
		mo_1 = LsbootBootSecurity(parent_mo_or_dn=mo, secure_boot=boot['secure_boot'])
    	except:
        	module.fail_json(msg="Boot Security creation failed")


    try:
	mo_2 = LsbootLan(parent_mo_or_dn=mo, prot="pxe", order="5")
	mo_2_1 = LsbootLanImagePath(parent_mo_or_dn=mo_2, prov_srv_policy_name="", img_sec_policy_name="", vnic_name="", i_scsi_vnic_name="", boot_ip_policy_name="", img_policy_name="", type="primary")

    except:
        module.fail_json(msg="Boot Lan Order creation failed")

    return results

def main():
    module = AnsibleModule(
        argument_spec = dict(
            LsbootPolicy = dict(type='dict', default={}),
            LsbootBootSecurity = dict(type='dict', default={}),
            LsbootLan = dict(type='dict', default={}),
            LsbootSan = dict(type='dict', default={})
        )
    )

    results = conf_mo_test(module)
    module.exit_json(**results)

from ansible.module_utils.basic import *
if __name__ == '__main__':
    main()

